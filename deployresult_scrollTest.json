{
 "contracts": {
  "MockTPO": {
   "deployer": "0xb935B63E7C8152673E5c4E95D26D19189a06794f",
   "addr": "0x1bb4C78217E7837B1D50BeDa39d6EaD73EFFfa0B",
   "abi": [
    "function getERC20TokenUSDPrice(address tokenAddr) pure returns (uint256)"
   ]
  },
  "P721": {
   "deployer": "0xb935B63E7C8152673E5c4E95D26D19189a06794f",
   "addr": "0xA658609C3eDad030f187117369979Cc6d5563D4a",
   "abi": [
    "constructor() payable",
    "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
    "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
    "event Initialized(uint8)",
    "event PExtendData(string dataName)",
    "event PExtendDataModified(uint256 indexed tokenId, string dataName, bytes newData)",
    "event PExtendable721Mint(address indexed toAddr, uint256 indexed tokenId, bytes fixedData)",
    "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
    "function _codec() view returns (address)",
    "function _minter() view returns (address)",
    "function _owner() view returns (address)",
    "function _royalFeeAddr() view returns (address)",
    "function _royalties() view returns (uint256)",
    "function _writeableDataNames(string) view returns (bool)",
    "function approve(address to, uint256 tokenId)",
    "function balanceOf(address owner) view returns (uint256)",
    "function burn(uint256 tokenId)",
    "function changeOwner(address newOwner)",
    "function extendData(string dataName)",
    "function getApproved(uint256 tokenId) view returns (address)",
    "function getFixedData(uint256 tokenId) view returns (bytes data)",
    "function getWriteabledData(uint256 tokenId, string dataName) view returns (bytes data)",
    "function init721(string name, string symbol, string baseURI, address codec, uint256 idStart)",
    "function initialize()",
    "function initialized() view returns (uint8)",
    "function isApprovedForAll(address owner, address operator) view returns (bool)",
    "function isOwner(address addr) view returns (bool)",
    "function mint(address to, bytes data) returns (uint256)",
    "function mintFixedId(address to, uint256 tokenId, bytes data) returns (uint256)",
    "function modifyWriteableData(uint256 tokenId, string dataName, bytes data)",
    "function name() view returns (string)",
    "function ownerOf(uint256 tokenId) view returns (address)",
    "function royaltyInfo(uint256, uint256 value) view returns (address receiver, uint256 royaltyAmount)",
    "function safeTransferFrom(address from, address to, uint256 tokenId)",
    "function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)",
    "function setApprovalForAll(address operator, bool approved)",
    "function setCodec(address codec)",
    "function setMinter(address minter)",
    "function setRoyalties(uint256 royalties, address receiver)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
    "function symbol() view returns (string)",
    "function tokenURI(uint256 tokenId) view returns (string)",
    "function transferERC20(address erc20)",
    "function transferETH()",
    "function transferFrom(address from, address to, uint256 tokenId)",
    "function updateURI(string baseTokenURI)"
   ]
  },
  "PFreezeable721": {
   "deployer": "0xb935B63E7C8152673E5c4E95D26D19189a06794f",
   "addr": "0xa8Db1Ac87dbD73F2A628f1B31063C6B99731c9Ad",
   "abi": [
    "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
    "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
    "event Initialized(uint8)",
    "event NFTFreeze(uint256 indexed tokenId, bool freeze)",
    "event PExtendData(string dataName)",
    "event PExtendDataModified(uint256 indexed tokenId, string dataName, bytes newData)",
    "event PExtendable721Mint(address indexed toAddr, uint256 indexed tokenId, bytes fixedData)",
    "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
    "function _codec() view returns (address)",
    "function _minter() view returns (address)",
    "function _owner() view returns (address)",
    "function _royalFeeAddr() view returns (address)",
    "function _royalties() view returns (uint256)",
    "function _writeableDataNames(string) view returns (bool)",
    "function approve(address to, uint256 tokenId)",
    "function balanceOf(address owner) view returns (uint256)",
    "function burn(uint256 tokenId)",
    "function changeOwner(address newOwner)",
    "function extendData(string dataName)",
    "function freeze(uint256 tokenId)",
    "function getApproved(uint256 tokenId) view returns (address)",
    "function getFixedData(uint256 tokenId) view returns (bytes data)",
    "function getWriteabledData(uint256 tokenId, string dataName) view returns (bytes data)",
    "function init721(string name, string symbol, string baseURI, address codec, uint256 idStart)",
    "function initialize()",
    "function initialized() view returns (uint8)",
    "function isApprovedForAll(address owner, address operator) view returns (bool)",
    "function isFreezed(uint256 tokenId) view returns (bool)",
    "function isOwner(address addr) view returns (bool)",
    "function mint(address to, bytes data) returns (uint256)",
    "function mintFixedId(address to, uint256 tokenId, bytes data) returns (uint256)",
    "function modifyWriteableData(uint256 tokenId, string dataName, bytes data)",
    "function name() view returns (string)",
    "function notFreezed(uint256 tokenId) view returns (bool)",
    "function ownerOf(uint256 tokenId) view returns (address)",
    "function royaltyInfo(uint256, uint256 value) view returns (address receiver, uint256 royaltyAmount)",
    "function safeTransferFrom(address from, address to, uint256 tokenId)",
    "function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)",
    "function setApprovalForAll(address operator, bool approved)",
    "function setCodec(address codec)",
    "function setMinter(address minter)",
    "function setRoyalties(uint256 royalties, address receiver)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
    "function symbol() view returns (string)",
    "function tokenURI(uint256 tokenId) view returns (string)",
    "function transferERC20(address erc20)",
    "function transferETH()",
    "function transferFrom(address from, address to, uint256 tokenId)",
    "function unfreeze(uint256 tokenId)",
    "function updateURI(string baseTokenURI)"
   ]
  },
  "P1155": {
   "deployer": "0xb935B63E7C8152673E5c4E95D26D19189a06794f",
   "addr": "0xcDfEA524ce3Cf5d26435B53447B8bA1848c3bd4b",
   "abi": [
    "constructor() payable",
    "event ApprovalForAll(address indexed account, address indexed operator, bool approved)",
    "event Extendable1155Modify(uint256 indexed id, bytes extendData)",
    "event Initialized(uint8)",
    "event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values)",
    "event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value)",
    "event URI(string value, uint256 indexed id)",
    "function _codec() view returns (address)",
    "function _minter() view returns (address)",
    "function _owner() view returns (address)",
    "function _royalFeeAddr() view returns (address)",
    "function _royalties() view returns (uint256)",
    "function balanceOf(address account, uint256 id) view returns (uint256)",
    "function balanceOfBatch(address[] accounts, uint256[] ids) view returns (uint256[])",
    "function burn(address account, uint256 id, uint256 value)",
    "function burnBatch(address account, uint256[] ids, uint256[] values)",
    "function changeOwner(address newOwner)",
    "function exists(uint256 id) view returns (bool)",
    "function getExtendData(uint256 id) view returns (bytes)",
    "function init1155(string name, string symbol, string baseURI, address codec)",
    "function initialize()",
    "function initialized() view returns (uint8)",
    "function isApprovedForAll(address account, address operator) view returns (bool)",
    "function isOwner(address addr) view returns (bool)",
    "function mint(address to, uint256 id, uint256 amount, bytes data)",
    "function mintBatch(address to, uint256[] ids, uint256[] amounts, bytes data)",
    "function modifyExtendData(uint256 id, bytes extendData)",
    "function name() view returns (string)",
    "function royaltyInfo(uint256, uint256 value) view returns (address receiver, uint256 royaltyAmount)",
    "function safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] amounts, bytes data)",
    "function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes data)",
    "function setApprovalForAll(address operator, bool approved)",
    "function setCodec(address codec)",
    "function setMinter(address minter)",
    "function setRoyalties(uint256 royalties)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
    "function symbol() view returns (string)",
    "function totalSupply(uint256 id) view returns (uint256)",
    "function transferERC20(address erc20)",
    "function transferETH()",
    "function updateURI(string newuri)",
    "function uri(uint256) view returns (string)"
   ]
  },
  "PCapped20": {
   "deployer": "0xb935B63E7C8152673E5c4E95D26D19189a06794f",
   "addr": "0x15cb54683AaF7556F20DA17C136d75ea10Fe09A7",
   "abi": [
    "constructor()",
    "event Approval(address indexed owner, address indexed spender, uint256 value)",
    "event Initialized(uint8)",
    "event Transfer(address indexed from, address indexed to, uint256 value)",
    "function _owner() view returns (address)",
    "function allowance(address owner, address spender) view returns (uint256)",
    "function approve(address spender, uint256 amount) returns (bool)",
    "function balanceOf(address account) view returns (uint256)",
    "function burn(uint256 amount)",
    "function burnFrom(address account, uint256 amount)",
    "function decimals() view returns (uint8)",
    "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
    "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
    "function initCapped20(string name_, string symbol_, uint256 cap_)",
    "function initialize()",
    "function initialized() view returns (uint8)",
    "function name() view returns (string)",
    "function symbol() view returns (string)",
    "function totalSupply() view returns (uint256)",
    "function transfer(address to, uint256 amount) returns (bool)",
    "function transferFrom(address from, address to, uint256 amount) returns (bool)"
   ]
  },
  "PMintable20": {
   "deployer": "0xb935B63E7C8152673E5c4E95D26D19189a06794f",
   "addr": "0xBd6D229b77A00182A86278466be827e080A0f407",
   "abi": [
    "constructor()",
    "event Approval(address indexed owner, address indexed spender, uint256 value)",
    "event Initialized(uint8)",
    "event Transfer(address indexed from, address indexed to, uint256 value)",
    "function _maxSupply() view returns (uint256)",
    "function _minter() view returns (address)",
    "function _owner() view returns (address)",
    "function allowance(address owner, address spender) view returns (uint256)",
    "function approve(address spender, uint256 amount) returns (bool)",
    "function balanceOf(address account) view returns (uint256)",
    "function burn(uint256 amount)",
    "function burnFrom(address account, uint256 amount)",
    "function changeOwner(address newOwner)",
    "function decimals() view returns (uint8)",
    "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
    "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
    "function initMintable20(string name_, string symbol_, uint256 maxSupply)",
    "function initialize()",
    "function initialized() view returns (uint8)",
    "function isOwner(address addr) view returns (bool)",
    "function mint(address toAddr, uint256 value)",
    "function name() view returns (string)",
    "function setMinter(address minter)",
    "function symbol() view returns (string)",
    "function totalSupply() view returns (uint256)",
    "function transfer(address to, uint256 amount) returns (bool)",
    "function transferFrom(address from, address to, uint256 amount) returns (bool)"
   ]
  },
  "PioneerSyCoin20": {
   "deployer": "0xb935B63E7C8152673E5c4E95D26D19189a06794f",
   "addr": "0xAC08B18764e85207A0437c27aC40608Fb1024F84",
   "abi": [
    "constructor(address impl) payable",
    "event AdminChanged(address previousAdmin, address newAdmin)",
    "event Upgraded(address indexed implementation)",
    "function changeAdmin(address newAdmin)",
    "function getAdmin() view returns (address)",
    "function upgradeTo(address impl)"
   ]
  },
  "PioneerToken20": {
   "deployer": "0xb935B63E7C8152673E5c4E95D26D19189a06794f",
   "addr": "0xDa477Ac18e17A78384a5Bce7F9E86Bd87F8F82E5",
   "abi": [
    "constructor(address impl) payable",
    "event AdminChanged(address previousAdmin, address newAdmin)",
    "event Upgraded(address indexed implementation)",
    "function changeAdmin(address newAdmin)",
    "function getAdmin() view returns (address)",
    "function upgradeTo(address impl)"
   ]
  },
  "PioneerSyCoin20Minter": {
   "deployer": "0xb935B63E7C8152673E5c4E95D26D19189a06794f",
   "addr": "0x18611B5f73ddff000c278ACE59bf374c89099575",
   "abi": [
    "constructor(address psycoin)",
    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
    "function FACTORY_ADMIN_ROLE() view returns (bytes32)",
    "function MANAGER_ROLE() view returns (bytes32)",
    "function MINTER_ROLE() view returns (bytes32)",
    "function _psycoin() view returns (address)",
    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
    "function grantRole(bytes32 role, address account)",
    "function hasRole(bytes32 role, address account) view returns (bool)",
    "function mintCoin20(address toAddr, uint256 value)",
    "function renounceRole(bytes32 role, address account)",
    "function revokeRole(bytes32 role, address account)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)"
   ]
  },
  "PioneerTokenMinePool": {
   "deployer": "0xb935B63E7C8152673E5c4E95D26D19189a06794f",
   "addr": "0x96070Cdf6a601D10389D4Ae61FAC36b3F047e634",
   "abi": [
    "constructor(address PioneerToken, uint256 perblock)",
    "event PioneerTokenMinePoolSend(address indexed userAddr, address indexed caller, uint256 value, bytes reason)",
    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
    "function MANAGER_ROLE() view returns (bytes32)",
    "function MINTER_ROLE() view returns (bytes32)",
    "function P101_LAST_OUTPUT_BLOCK() view returns (uint256)",
    "function P101_LIQUIDITY() view returns (uint256)",
    "function P101_PER_BLOCK() view returns (uint256)",
    "function P101_TOTAL_OUTPUT() view returns (uint256)",
    "function _PioneerToken() view returns (address)",
    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
    "function grantRole(bytes32 role, address account)",
    "function hasRole(bytes32 role, address account) view returns (bool)",
    "function renounceRole(bytes32 role, address account)",
    "function revokeRole(bytes32 role, address account)",
    "function send(address userAddr, uint256 value, bytes reason)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)"
   ]
  },
  "PioneerOffOnChainBridge": {
   "deployer": "0xb935B63E7C8152673E5c4E95D26D19189a06794f",
   "addr": "0xdF5aB6ee82966B40f24433ED434338076c6Fb86e",
   "abi": [
    "constructor()",
    "event Off2OnChain_PIOT(address userAddr, uint256 value)",
    "event Off2OnChain_PSYC(address userAddr, uint256 value)",
    "event On2OffChain_PIOT(address userAddr, uint256 value)",
    "event On2OffChain_PSYC(address userAddr, uint256 value)",
    "event Paused(address account)",
    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
    "event Unpaused(address account)",
    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
    "function MANAGER_ROLE() view returns (bytes32)",
    "function MINTER_ROLE() view returns (bytes32)",
    "function PAUSER_ROLE() view returns (bytes32)",
    "function SERVICE_ROLE() view returns (bytes32)",
    "function _PIOTAddr() view returns (address)",
    "function _PSYCAddr() view returns (address)",
    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
    "function grantRole(bytes32 role, address account)",
    "function hasRole(bytes32 role, address account) view returns (bool)",
    "function init(address PSYCAddr, address PIOTAddr)",
    "function off2onChain_PIOT(address userAddr, uint256 value)",
    "function off2onChain_PSYC(address userAddr, uint256 value)",
    "function on2offChain_PIOT(uint256 value)",
    "function on2offChain_PSYC(uint256 value)",
    "function pause()",
    "function paused() view returns (bool)",
    "function renounceRole(bytes32 role, address account)",
    "function revokeRole(bytes32 role, address account)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
    "function unpause()"
   ]
  }
 }
}